Checkers ToDo
-------------
 
 * Time remaining
 * Create king PictureBox in 'New Game' for custom king images (initially holds default king icon)
 * Naming players
 * Save/load settings
 * Create Checkers.ini file if doesnt exist when first run
 * Sounds
 * Button to 'show last move'
 * Show 'Nice!' and 'Winner!'
 * Have a 'default' button for each color
 * Window flashing
 * Send/receive message sounds
 * Make all settings work
 * Checkers agents for higher difficulties
 * Hint Option: use an agent on player's turn to highlight a useful move
 x Option: Delay AI movement
 x Fix up context menu issue in frmNewGame
 - Detach Agents from project .. allow to be plug-in-able
 - Preference: Remember last game info for a new game
 - Easter eggs - pieces, etc
 - Tournament mode: human vs. pc's or other humans
 - No help button in tourneys
 - Game snapshots for later review
 - Game logging and reviewing (playback)
 
 Checkers Agents
 ----------------
 - Make separate entity (plugins)
 - Use a endgame database
 - Improve heuristics
 - Make endgame heuristics aim differently.. deeper search
 - Use BFS so can evaluate up to a certain time instead of depth (use a min time and depth method)
 - If best move is found, remember it
 - Detect definite wins, losses, and stalemates (according to agent's movement)
 
 Checkers Netplay
 -----------------
 
 * Net gaming
 * Chat: sounds in new game window
 * Chat window context menu (std edit menu + "save...")
 * Chatting .. when a msg is received and the textbox loses/restores focus, it highlights your prev send-message
 x In 'frmNewGame' flash window when opponent clicks "I'm Ready"
 - The 'Copy' menu item in the chat window --> copies entire text, make it copy only selected text
 - Better network handling in 'frmNewGame' (prevent deadlock; separate client and host windows)
 - Allow spectators
 - Allow host to be a spectator (dedicated game server)
 - Separate into own entity.. a game plugin (as an agent?)
 - Net tournament mode
 - Get WAN from net
 
 Checkers UI
 -----------
 
 * Make event-based in case coder uses internal game structure to play
 * Be sure no 'game' objects can throw NullReferenceException in public functions
 * Allow clickable movements; instead of dragable movements
 * Hide 'jumped' in the process of a double-jump
 * Show last move
 * Show more subtle 'Must jump' message (Option)
 * Property: 'Text' -- shows text on the board (using ForeColor)
 * Property: 'TextAlign'
 * Stalemates (through game)
 x With optional jumping, if double-jump is available keep going .. if piece is placed on same spot, end turn
 - Preference: Smooth animations (frame-based animation)
 
 Checkers Game
 -------------
 
 * Remember last CheckersPiece that moved: LastMoved
 * Stalemates
 x Make game able to play with optional jumping
 - Make less strict mode (allow user to do illegal moves, manipulate the board/pieces, etc)
 - Remake to use new data structure model: board as linked list and matrix, moves as linked list
   Functions include board analyzation and manipulation
